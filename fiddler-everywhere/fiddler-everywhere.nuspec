<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>fiddler-everywhere</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>1.0.2</version>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>codingcoyote</owners>
    <packageSourceUrl>https://github.com/digitalcoyote/chocolatey-packages</packageSourceUrl>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Fiddler Everywhere</title>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://www.telerik.com/fiddler</projectUrl>
    <!-- <iconUrl>Icon on website is for Progress not Fiddler Everywhere</iconUrl> -->
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://www.telerik.com/purchase/license-agreement/fiddler-everywhere</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <docsUrl>https://docs.telerik.com/fiddler-everywhere/introduction</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <authors>FiddlerTeam</authors>
    <tags>fiddler everywhere debugger</tags>
    <summary>Fiddler Everywhere is a high performance, cross-platform web debugging proxy for any browser, system or platform. It is a web debugging tool that logs all HTTP(S) traffic between your computer and the Internet, inspects and edits traffic, issue requests, and fiddle with incoming and outgoing data.</summary>
<description>Fiddler Everywhere is a high performance, cross-platform web debugging proxy for any browser, system or platform. It is a web debugging tool that logs all HTTP(S) traffic between your computer and the Internet, inspects and edits traffic, issue requests, and fiddle with incoming and outgoing data.

### HTTP(S) traffic Inspection And Analysis

Fiddler Everywhere logs all HTTP(S) traffic between your computer and the Internet. It captures traffic from virtually any application that supports a system proxy.

### Request and Response Mocking

Fiddler support mocking or modifying request and responses on any application. It’s a quick and easy way to change HTTP(S) requests and responses without changing the code.

### API Composing

Use Fiddler API Composer to test APIs by creating and sending requests. Useful while developing new APIs or when testing existing APIs.

## Key Features
* Compatible with MacOS, Windows, and Linux.
* Inspect web traffic (HTTP and HTTPS).
* Decrypt secure traffic (HTTPS).
* Save, share, and receive captured traffic with collaborators.
* Mock requests and responses
* Modify response
* Compose API requests
* Save composed API requests
* Fiddler Everywhere Pro features with extended sharing and collaboration options.</description>
    <releaseNotes>https://www.telerik.com/support/whats-new/fiddler-everywhere/release-history</releaseNotes>
    <!-- =============================== -->      

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!-- <dependencies>
      <dependency id="chocolatey-core.extension" version="1.0.4"/>
    </dependencies> -->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
